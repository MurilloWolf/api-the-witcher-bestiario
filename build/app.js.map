{"version":3,"sources":["../src/app.js"],"names":["App","server","applyMidleware","connectDB","use","express","json","useRoutes","routes","dotenv","config","uri","process","env","MONGO_URL","console","log","mongoose","connect","useNewUrlParser","useUnifiedTopology","connected"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IACMA,G;AACF,iBAAc;AAAA;;AACV,SAAKC,MAAL,GAAc,0BAAd;AACA,SAAKC,cAAL;AACA,SAAKC,SAAL;AACH;;;;WAED,0BAAiB;AACb,WAAKF,MAAL,CAAYG,GAAZ,CAAgB,uBAAhB;AACA,WAAKH,MAAL,CAAYG,GAAZ,CAAgBC,oBAAQC,IAAR,EAAhB;AACA,WAAKC,SAAL;AACH;;;WAED,qBAAY;AACR,WAAKN,MAAL,CAAYG,GAAZ,CAAgBI,kBAAhB;AACH;;;;+EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEQC,mCAAOC,MAAP;;AACMC,gBAAAA,GAHd,GAGoBC,OAAO,CAACC,GAAR,CAAYC,SAHhC;AAIQC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AALR;AAAA,uBAMgCM,qBAASC,OAAT,CAAiBP,GAAjB,EACpB;AAAEQ,kBAAAA,eAAe,EAAE,IAAnB;AAAyBC,kBAAAA,kBAAkB,EAAE;AAA7C,iBADoB,CANhC;;AAAA;AAMcC,gBAAAA,SANd;AAQQA,gBAAAA,SAAS,GAAGN,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAH,GAA2CD,OAAO,CAACC,GAAR,CAAY,mBAAZ,CAApD;AARR;AAAA;;AAAA;AAAA;AAAA;AAWQD,gBAAAA,OAAO,CAACC,GAAR;;AAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;eAiBW,IAAIhB,GAAJ,GAAUC,M","sourcesContent":["import mongoose from 'mongoose';\nimport express from 'express';\nimport cors from 'cors';\nimport routes from './routes'\nimport dotenv from 'dotenv'\nclass App {\n    constructor() {\n        this.server = express();\n        this.applyMidleware();\n        this.connectDB()\n    }\n\n    applyMidleware() {\n        this.server.use(cors());\n        this.server.use(express.json());\n        this.useRoutes()\n    }\n\n    useRoutes() {\n        this.server.use(routes)\n    }\n\n    async connectDB() {\n        try {\n            dotenv.config()\n            const uri = process.env.MONGO_URL;\n            console.log('URI')\n            console.log(uri)\n            const connected = await mongoose.connect(uri,\n                { useNewUrlParser: true, useUnifiedTopology: true });\n            connected ? console.log('Conectado com o banco ') : console.log('Erro ao conectar ');\n        }\n        catch (err) {\n            console.log(err)\n        }\n    };\n\n}\n\nexport default new App().server;\n"],"file":"app.js"}